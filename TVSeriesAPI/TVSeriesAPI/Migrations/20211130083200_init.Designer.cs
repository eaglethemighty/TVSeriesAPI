// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TVSeriesAPI.DAL;

#nullable disable

namespace TVSeriesAPI.Migrations
{
    [DbContext(typeof(TVSeriesDbContext))]
    [Migration("20211130083200_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.CastMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CastMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steve Carell",
                            Position = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Justin Roiland",
                            Position = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bob Odenkirk",
                            Position = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pedro Pascal",
                            Position = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Steven Avery",
                            Position = 0
                        });
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1,
                            SeasonId = 1,
                            Title = "The American Office"
                        },
                        new
                        {
                            Id = 2,
                            Number = 1,
                            SeasonId = 2,
                            Title = "Pilot"
                        },
                        new
                        {
                            Id = 3,
                            Number = 1,
                            SeasonId = 3,
                            Title = "Uno"
                        },
                        new
                        {
                            Id = 4,
                            Number = 1,
                            SeasonId = 4,
                            Title = "Descenso"
                        },
                        new
                        {
                            Id = 5,
                            Number = 1,
                            SeasonId = 5,
                            Title = "Eighteen Years Lost"
                        });
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.EpisodeCast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CastMemberId")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CastMemberId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("EpisodeCasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CastMemberId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CastMemberId = 2,
                            EpisodeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CastMemberId = 3,
                            EpisodeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CastMemberId = 4,
                            EpisodeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CastMemberId = 5,
                            EpisodeId = 5
                        });
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Animated"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Criminal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Documentary"
                        });
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SerieId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1,
                            SerieId = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 1,
                            SerieId = 2
                        },
                        new
                        {
                            Id = 3,
                            Number = 1,
                            SerieId = 3
                        },
                        new
                        {
                            Id = 4,
                            Number = 1,
                            SerieId = 4
                        },
                        new
                        {
                            Id = 5,
                            Number = 1,
                            SerieId = 5
                        });
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            ReleaseYear = 2005,
                            Title = "The Office (US)"
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            ReleaseYear = 2013,
                            Title = "Rick and Morty"
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            ReleaseYear = 2015,
                            Title = "Better Call Saul"
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 4,
                            ReleaseYear = 2015,
                            Title = "Narcos"
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 5,
                            ReleaseYear = 2015,
                            Title = "Making a Murderer"
                        });
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Episode", b =>
                {
                    b.HasOne("TVSeriesAPI.Models.Entities.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.EpisodeCast", b =>
                {
                    b.HasOne("TVSeriesAPI.Models.Entities.CastMember", "CastMember")
                        .WithMany("Episodes")
                        .HasForeignKey("CastMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TVSeriesAPI.Models.Entities.Episode", "Episode")
                        .WithMany("CastMembers")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CastMember");

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Season", b =>
                {
                    b.HasOne("TVSeriesAPI.Models.Entities.Serie", "Serie")
                        .WithMany("Seasons")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Serie", b =>
                {
                    b.HasOne("TVSeriesAPI.Models.Entities.Genre", "Genre")
                        .WithMany("Series")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.CastMember", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Episode", b =>
                {
                    b.Navigation("CastMembers");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Genre", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("TVSeriesAPI.Models.Entities.Serie", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
